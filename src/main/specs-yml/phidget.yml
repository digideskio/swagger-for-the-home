apiVersion: "1"
resourcePath: /phidget
swaggerVersion: "1.2"
basePath: "http://192.168.2.174:8080"
apis:
  - path: /phidget/inputDefinition
    description: ""
    operations:
      - method: GET
        summary: reads the input definitions based on configs
        notes: ""
        type: array
        items:
          $ref: InputZone
        nickname: getInputZones
        parameters: []
  - path: /phidget/analog/inputs
    description: ""
    operations:
      - method: GET
        summary: returns all inputs
        notes: Gives a list of all analog IO values
        type: array
        items:
          $ref: AnalogIO
        nickname: getAnalogInputs
        parameters: []
  - path: /phidget/lcd
    description: ""
    operations:
      - method: POST
        summary: Updates the LCD
        notes: Pass a line number and string to update on the LCD
        type: void
        nickname: setLcd
        parameters:
          - name: msg
            description: text to send
            required: true
            allowMultiple: false
            type: String
            paramType: query
          - name: lineNumber
            description: Line to update
            defaultValue: "0"
            required: true
            allowMultiple: false
            type: Int
            paramType: query
            enum:
              - "0"
              - "1"
              - "2"
              - "3"
  - path: "/phidget/relay/output"
    description: ""
    operations:
      - method: POST
        summary: sets all relays
        notes: Posting a value will set all relays to the specified state
        type: void
        nickname: setAllRelayOutput
        parameters:
          - name: state
            description: value to set relay on
            defaultValue: "true"
            required: true
            allowMultiple: false
            type: boolean
            paramType: query
            enum:
              - "true"
              - "false"
  - path: "/phidget/relay/output/{position}"
    description: ""
    operations:
      - method: POST
        summary: sets a relay for a specific position
        notes: Sets the specified IO
        type: DigitalIO
        nickname: setOutputRelay
        parameters:
          - name: position
            description: positon to fetch
            defaultValue: "0"
            required: true
            allowMultiple: false
            type: integer
            format: int32
            paramType: path
            enum:
              - "0"
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
          - name: state
            description: state to set relay on
            defaultValue: "true"
            required: true
            allowMultiple: false
            type: boolean
            paramType: path
            enum:
              - "true"
              - "false"
  - path: "/phidget/relay/output/{position}"
    description: ""
    operations:
      - method: GET
        summary: gets an output state
        notes: Gets the specified IO
        type: DigitalIO
        nickname: getRelayOutput
        parameters:
          - name: position
            description: positon to fetch
            defaultValue: "0"
            required: true
            allowMultiple: false
            type: integer
            format: int32
            paramType: path
            enum:
              - "0"
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
models:
  AnalogIO:
    id: AnalogIO
    required:
      - position
      - value
      - timestamp
    properties:
      name:
        type: string
      position:
        type: integer
        format: int32
      value:
        type: number
        format: double
      timestamp:
        type: string
        format: date-time
  Zone:
    id: Zone
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  DigitalIO:
    id: DigitalIO
    required:
      - position
      - value
    properties:
      name:
        type: string
      position:
        type: integer
        format: int32
      value:
        type: boolean
      timestamp:
        type: string
        format: date-time
  InputZone:
    id: InputZone
    required:
      - position
      - deviceId
      - logicalPosition
      - name
    properties:
      name:
        type: string
      logicalPosition:
        type: integer
        format: int32
      position:
        type: integer
        format: int32
      deviceId:
        type: string
